{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","dataLocalTime","this","timerID","setInterval","date","Date","setState","toLocaleTimeString","clearInterval","props","name","time","Component","App","isClockVisible","clockName","clockTime","className","type","onClick","dataNames","Math","floor","random","length","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,cAAe,MAFnB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,IAAMC,EAAO,IAAIC,KAGjB,EAAKC,SAAS,CAAEN,cAAeI,EAAKG,yBACnC,OAXP,kCAcE,WACEC,cAAcP,KAAKC,WAfvB,oBAkBE,WACE,OACE,oCACE,2CAEG,IACCD,KAAKF,MAAMC,eAEf,2BACGC,KAAKQ,MAAMC,KACX,IACAT,KAAKQ,MAAME,WA7BtB,GAA2BC,aCEdC,G,MAAb,4MACEd,MAAQ,CACNe,gBAAgB,EAChBC,UAAW,GACXC,UAAW,GAJf,4CAOE,WAAU,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,2CAEA,4BACEC,KAAK,SACLC,QAAS,WACP,EAAKpB,MAAMe,eACP,EAAKR,SAAS,CAAEQ,gBAAgB,IAChC,EAAKR,SAAS,CAAEQ,gBAAgB,MAIrCb,KAAKF,MAAMe,eAAiB,aAAe,eAG5Cb,KAAKF,MAAMe,gBAET,4BACEI,KAAK,SACLC,QAAS,WACP,IAAMC,EAAY,CAAC,UAAW,WAAY,UAAW,WAErD,EAAKd,SAAS,CAEZS,UAAWK,EAAUC,KAAKC,MAAMD,KAAKE,SAAWH,EAAUI,aAPhE,oBAgBFvB,KAAKF,MAAMe,gBAAkBb,KAAKF,MAAMgB,WAEtC,4BACEG,KAAK,SACLC,QAAS,WACP,EAAKb,SAAS,CACZU,UAAWK,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,MAJnD,mBAaJ,4BACEL,KAAK,SACLC,QAAS,WACP,EAAKb,SAAS,CAAES,UAAW,OAC3B,EAAKT,SAAS,CAAEU,UAAW,SAJ/B,UAUEf,KAAKF,MAAMe,gBAET,kBAAC,EAAD,CACEJ,KAAMT,KAAKF,MAAMgB,UACjBJ,KAAMV,KAAKF,MAAMiB,iBAvE/B,GAAyBJ,cCDzBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2b589f37.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends Component {\n  state = {\n    dataLocalTime: null,\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => {\n      const date = new Date();\n\n      // eslint-disable-next-line\n      this.setState({ dataLocalTime: date.toLocaleTimeString()});\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return (\n      <>\n        <p>\n          Current time:\n          {' '}\n          { this.state.dataLocalTime }\n        </p>\n        <p>\n          {this.props.name}\n          {' '}\n          {this.props.time}\n        </p>\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.oneOfType([\n    // PropTypes.oneOf([null]),\n    PropTypes.string,\n  ]).isRequired,\n\n  time: PropTypes.oneOfType([\n    // PropTypes.oneOf([null]),\n    PropTypes.number,\n  ]).isRequired,\n};\n\n// PropTypes.oneOfType([\n//   PropTypes.string.isRequired,\n//   PropTypes.oneOf([null]).isRequired,\n// ]).isRequired\n","import React, { Component } from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nexport class App extends Component {\n  state = {\n    isClockVisible: false,\n    clockName: '',\n    clockTime: 0,\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.state.isClockVisible\n              ? this.setState({ isClockVisible: false })\n              : this.setState({ isClockVisible: true });\n          }\n          }\n        >\n          {this.state.isClockVisible ? 'Show Clock' : 'Hide Clock'}\n        </button>\n\n        {!this.state.isClockVisible\n          && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                const dataNames = ['Cooking', 'Cleaning', 'Washing', 'Wake Up'];\n\n                this.setState({\n                  // eslint-disable-next-line\n                  clockName: dataNames[Math.floor(Math.random() * dataNames.length)],\n                });\n              }}\n            >\n              Set random name\n            </button>\n          )\n        }\n\n        {!this.state.isClockVisible && this.state.clockName\n          && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({\n                  clockTime: Math.floor(Math.random() * 100) + 1,\n                });\n              }}\n            >\n              Set random time\n            </button>\n          )\n        }\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: null });\n            this.setState({ clockTime: null });\n          }}\n        >\n          Reset\n        </button>\n\n        {!this.state.isClockVisible\n          && (\n            <Clock\n              name={this.state.clockName}\n              time={this.state.clockTime}\n            />\n          )\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}